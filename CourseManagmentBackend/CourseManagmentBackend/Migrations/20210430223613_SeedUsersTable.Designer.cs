// <auto-generated />
using System;
using CourseManagmentBackend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseManagmentBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210430223613_SeedUsersTable")]
    partial class SeedUsersTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourseManagmentBackend.Models.Course", b =>
                {
                    b.Property<long>("PkCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivKursa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkCourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            PkCourseId = 1L,
                            NazivKursa = "Asp.net"
                        },
                        new
                        {
                            PkCourseId = 2L,
                            NazivKursa = "Vuejs"
                        },
                        new
                        {
                            PkCourseId = 3L,
                            NazivKursa = ".Net core"
                        },
                        new
                        {
                            PkCourseId = 4L,
                            NazivKursa = "Python"
                        });
                });

            modelBuilder.Entity("CourseManagmentBackend.Models.CourseStudent", b =>
                {
                    b.Property<long>("PkCourseId")
                        .HasColumnType("bigint");

                    b.Property<long>("PkStudentID")
                        .HasColumnType("bigint");

                    b.HasKey("PkCourseId", "PkStudentID");

                    b.HasIndex("PkStudentID");

                    b.ToTable("CourseStudent");

                    b.HasData(
                        new
                        {
                            PkCourseId = 1L,
                            PkStudentID = 1L
                        },
                        new
                        {
                            PkCourseId = 1L,
                            PkStudentID = 2L
                        },
                        new
                        {
                            PkCourseId = 2L,
                            PkStudentID = 1L
                        },
                        new
                        {
                            PkCourseId = 3L,
                            PkStudentID = 1L
                        });
                });

            modelBuilder.Entity("CourseManagmentBackend.Models.Status", b =>
                {
                    b.Property<long>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            StatusId = 1L,
                            Naziv = "Redovan"
                        },
                        new
                        {
                            StatusId = 2L,
                            Naziv = "Vanredni"
                        });
                });

            modelBuilder.Entity("CourseManagmentBackend.Models.Student", b =>
                {
                    b.Property<long>("PkStudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojIndeksa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<long>("YearId")
                        .HasColumnType("bigint");

                    b.HasKey("PkStudentID");

                    b.HasIndex("StatusId");

                    b.HasIndex("YearId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            PkStudentID = 1L,
                            BrojIndeksa = "123/15",
                            Ime = "Marko",
                            Prezime = "Marković",
                            StatusId = 1L,
                            YearId = 1L
                        },
                        new
                        {
                            PkStudentID = 2L,
                            BrojIndeksa = "124/15",
                            Ime = "Petar",
                            Prezime = "Petrović",
                            StatusId = 2L,
                            YearId = 2L
                        },
                        new
                        {
                            PkStudentID = 4L,
                            BrojIndeksa = "125/15",
                            Ime = "Marko",
                            Prezime = "Petrović",
                            StatusId = 1L,
                            YearId = 1L
                        },
                        new
                        {
                            PkStudentID = 5L,
                            BrojIndeksa = "126/15",
                            Ime = "Petar",
                            Prezime = "Marković",
                            StatusId = 1L,
                            YearId = 1L
                        });
                });

            modelBuilder.Entity("CourseManagmentBackend.Models.User", b =>
                {
                    b.Property<Guid>("PkUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkUserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            PkUserId = new Guid("f47723ed-995d-49e5-4ef6-08d90c2820f9"),
                            PasswordHash = new byte[] { 95, 4, 15, 89, 248, 149, 241, 102, 21, 65, 34, 103, 32, 225, 203, 169, 136, 224, 62, 68, 250, 30, 15, 23, 219, 68, 62, 25, 23, 194, 174, 80, 0, 59, 82, 4, 170, 203, 85, 121, 253, 89, 10, 181, 151, 106, 100, 136, 247, 121, 61, 71, 176, 92, 235, 45, 174, 179, 248, 236, 46, 208, 179, 166 },
                            PasswordSalt = new byte[] { 25, 226, 208, 127, 16, 122, 158, 79, 194, 68, 237, 79, 113, 197, 32, 25, 74, 79, 217, 51, 21, 137, 131, 144, 58, 94, 139, 89, 173, 246, 126, 205, 196, 243, 27, 190, 52, 66, 157, 78, 19, 209, 188, 88, 33, 58, 114, 78, 221, 65, 204, 111, 27, 235, 84, 33, 11, 180, 141, 188, 199, 27, 174, 121, 235, 126, 226, 170, 238, 89, 234, 229, 191, 158, 132, 105, 206, 149, 129, 3, 215, 28, 184, 210, 127, 80, 208, 10, 179, 69, 97, 170, 174, 200, 125, 37, 220, 82, 9, 115, 87, 63, 85, 69, 171, 112, 34, 82, 18, 64, 12, 150, 209, 90, 240, 212, 55, 16, 153, 158, 47, 4, 200, 177, 230, 209, 240, 113 },
                            Username = "administrator"
                        });
                });

            modelBuilder.Entity("CourseManagmentBackend.Models.Year", b =>
                {
                    b.Property<long>("YearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YearId");

                    b.ToTable("Year");

                    b.HasData(
                        new
                        {
                            YearId = 1L,
                            Naziv = "Prva"
                        },
                        new
                        {
                            YearId = 2L,
                            Naziv = "Druga"
                        },
                        new
                        {
                            YearId = 3L,
                            Naziv = "Treća"
                        },
                        new
                        {
                            YearId = 4L,
                            Naziv = "Četvrta"
                        });
                });

            modelBuilder.Entity("CourseManagmentBackend.Models.CourseStudent", b =>
                {
                    b.HasOne("CourseManagmentBackend.Models.Course", "Course")
                        .WithMany("CourseStudents")
                        .HasForeignKey("PkCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseManagmentBackend.Models.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("PkStudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CourseManagmentBackend.Models.Student", b =>
                {
                    b.HasOne("CourseManagmentBackend.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseManagmentBackend.Models.Year", "Year")
                        .WithMany()
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("CourseManagmentBackend.Models.Course", b =>
                {
                    b.Navigation("CourseStudents");
                });

            modelBuilder.Entity("CourseManagmentBackend.Models.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
